// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineBanking.Models;

#nullable disable

namespace OnlineBanking.Migrations
{
    [DbContext(typeof(BankingDbContext))]
    [Migration("20240314092919_f")]
    partial class f
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineBanking.Models.Account", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccountUserProfileId")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountNumber");

                    b.HasIndex("AccountUserProfileId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("OnlineBanking.Models.AccountProfile", b =>
                {
                    b.Property<int>("AccountUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountUserId"));

                    b.Property<string>("Aadharnumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Father_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrossAnnualIncome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobilenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OptedForDebitCard")
                        .HasColumnType("bit");

                    b.Property<bool>("OptedForNetBanking")
                        .HasColumnType("bit");

                    b.Property<string>("SourceOfIncome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountUserId");

                    b.ToTable("AccountUserProfiles");
                });

            modelBuilder.Entity("OnlineBanking.Models.Paypee", b =>
                {
                    b.Property<string>("PaypeeIdAccountNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaypeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaypeeIdAccountNumber");

                    b.ToTable("Paypees");
                });

            modelBuilder.Entity("OnlineBanking.Models.PermanenetAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<int?>("AccountProfileAccountUserId")
                        .HasColumnType("int");

                    b.Property<int>("AccountUserId")
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMailingAddress")
                        .HasColumnType("bit");

                    b.Property<string>("Landmark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("AccountProfileAccountUserId");

                    b.ToTable("PermanenetAddresses");
                });

            modelBuilder.Entity("OnlineBanking.Models.ResidentialAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<int?>("AccountProfileAccountUserId")
                        .HasColumnType("int");

                    b.Property<int>("AccountUserId")
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Landmark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("AccountProfileAccountUserId");

                    b.ToTable("ResidentialAddresses");
                });

            modelBuilder.Entity("OnlineBanking.Models.Token", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TokenId"));

                    b.Property<int>("AccountUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TokenId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("OnlineBanking.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaypeeIdAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Statement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrasactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("AccountNumber1");

                    b.HasIndex("PaypeeIdAccountNumber");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("OnlineBanking.Models.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccountUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LoginPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("extra_info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isConfirmedUserProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("AccountUserId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("OnlineBanking.Models.Account", b =>
                {
                    b.HasOne("OnlineBanking.Models.AccountProfile", "AccountProfile")
                        .WithMany()
                        .HasForeignKey("AccountUserProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountProfile");
                });

            modelBuilder.Entity("OnlineBanking.Models.PermanenetAddress", b =>
                {
                    b.HasOne("OnlineBanking.Models.AccountProfile", null)
                        .WithMany("PermanantAddress")
                        .HasForeignKey("AccountProfileAccountUserId");
                });

            modelBuilder.Entity("OnlineBanking.Models.ResidentialAddress", b =>
                {
                    b.HasOne("OnlineBanking.Models.AccountProfile", null)
                        .WithMany("ResidentialAddress")
                        .HasForeignKey("AccountProfileAccountUserId");
                });

            modelBuilder.Entity("OnlineBanking.Models.Transaction", b =>
                {
                    b.HasOne("OnlineBanking.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OnlineBanking.Models.Account", null)
                        .WithMany("Transactions")
                        .HasForeignKey("AccountNumber1");

                    b.HasOne("OnlineBanking.Models.Paypee", "Paypee")
                        .WithMany()
                        .HasForeignKey("PaypeeIdAccountNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Paypee");
                });

            modelBuilder.Entity("OnlineBanking.Models.UserProfile", b =>
                {
                    b.HasOne("OnlineBanking.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OnlineBanking.Models.AccountProfile", "AccountProfile")
                        .WithMany()
                        .HasForeignKey("AccountUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AccountProfile");
                });

            modelBuilder.Entity("OnlineBanking.Models.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("OnlineBanking.Models.AccountProfile", b =>
                {
                    b.Navigation("PermanantAddress");

                    b.Navigation("ResidentialAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
